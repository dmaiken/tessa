/*
 * This file is generated by jOOQ.
 */
package tessa.jooq.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.DefaultDataType
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.postgres.extensions.bindings.LtreeBinding
import org.jooq.postgres.extensions.types.Ltree

import tessa.jooq.Public


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class Subpath1 : AbstractRoutine<Ltree>("subpath", Public.PUBLIC, DSL.comment(""), DefaultDataType.getDefaultDataType("\"public\".\"ltree\""), LtreeBinding()) {
    companion object {

        /**
         * The parameter <code>public.subpath.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Ltree?> = Internal.createParameter("RETURN_VALUE", DefaultDataType.getDefaultDataType("\"public\".\"ltree\""), false, false, LtreeBinding())

        /**
         * The parameter <code>public.subpath._1</code>.
         */
        val _1: Parameter<Ltree?> = Internal.createParameter("_1", DefaultDataType.getDefaultDataType("\"public\".\"ltree\""), false, true, LtreeBinding())

        /**
         * The parameter <code>public.subpath._2</code>.
         */
        val _2: Parameter<Int?> = Internal.createParameter("_2", SQLDataType.INTEGER, false, true)

        /**
         * The parameter <code>public.subpath._3</code>.
         */
        val _3: Parameter<Int?> = Internal.createParameter("_3", SQLDataType.INTEGER, false, true)
    }

    init {
        returnParameter = Subpath1.RETURN_VALUE
        addInParameter(Subpath1._1)
        addInParameter(Subpath1._2)
        addInParameter(Subpath1._3)
        setOverloaded(true)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Ltree?): Unit = setValue(Subpath1._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Ltree?>): Unit {
        setField(Subpath1._1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: Int?): Unit = setValue(Subpath1._2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<Int?>): Unit {
        setField(Subpath1._2, field)
    }

    /**
     * Set the <code>_3</code> parameter IN value to the routine
     */
    fun set__3(value: Int?): Unit = setValue(Subpath1._3, value)

    /**
     * Set the <code>_3</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__3(field: Field<Int?>): Unit {
        setField(Subpath1._3, field)
    }
}
