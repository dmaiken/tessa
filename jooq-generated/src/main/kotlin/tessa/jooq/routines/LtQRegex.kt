/*
 * This file is generated by jOOQ.
 */
package tessa.jooq.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.DefaultDataType
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.postgres.extensions.bindings.LtreeBinding
import org.jooq.postgres.extensions.types.Ltree

import tessa.jooq.Public


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class LtQRegex : AbstractRoutine<Boolean>("lt_q_regex", Public.PUBLIC, DSL.comment(""), SQLDataType.BOOLEAN) {
    companion object {

        /**
         * The parameter <code>public.lt_q_regex.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Boolean?> = Internal.createParameter("RETURN_VALUE", SQLDataType.BOOLEAN, false, false)

        /**
         * The parameter <code>public.lt_q_regex._1</code>.
         */
        val _1: Parameter<Ltree?> = Internal.createParameter("_1", DefaultDataType.getDefaultDataType("\"public\".\"ltree\""), false, true, LtreeBinding())

        /**
         * The parameter <code>public.lt_q_regex._2</code>.
         */
        val _2: Parameter<Array<Any?>?> = Internal.createParameter("_2", DefaultDataType.getDefaultDataType("\"public\".\"lquery\"").array(), false, true)
    }

    init {
        returnParameter = LtQRegex.RETURN_VALUE
        addInParameter(LtQRegex._1)
        addInParameter(LtQRegex._2)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Ltree?): Unit = setValue(LtQRegex._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Ltree?>): Unit {
        setField(LtQRegex._1, field)
    }

    /**
     * Set the <code>_2</code> parameter IN value to the routine
     */
    fun set__2(value: Array<Any?>?): Unit = setValue(LtQRegex._2, value)

    /**
     * Set the <code>_2</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__2(field: Field<Array<Any?>?>): Unit {
        setField(LtQRegex._2, field)
    }
}
