/*
 * This file is generated by jOOQ.
 */
package tessa.jooq.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.DefaultDataType
import org.jooq.impl.Internal

import tessa.jooq.Public


@Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
@Suppress("warnings")
open class LtxtqRecv : AbstractRoutine<Any>(
    "ltxtq_recv",
    Public.PUBLIC,
    DSL.comment(""),
    DefaultDataType.getDefaultDataType("\"public\".\"ltxtquery\"")
) {
    companion object {
        @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val RETURN_VALUE: Parameter<Any?> = Internal.createParameter(
            "RETURN_VALUE",
            DefaultDataType.getDefaultDataType("\"public\".\"ltxtquery\""),
            false,
            false
        )
        @Deprecated(message = "Unknown data type. If this is a qualified, user-defined type, it may have been excluded from code generation. If this is a built-in type, you can define an explicit org.jooq.Binding to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.")
        val _1: Parameter<Any?> = Internal.createParameter(
            "_1",
            DefaultDataType.getDefaultDataType("\"pg_catalog\".\"internal\""),
            false,
            true
        )
    }

    init {
        returnParameter = LtxtqRecv.RETURN_VALUE
        addInParameter(LtxtqRecv._1)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Any?): Unit = setValue(LtxtqRecv._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Any?>): Unit {
        setField(LtxtqRecv._1, field)
    }
}
