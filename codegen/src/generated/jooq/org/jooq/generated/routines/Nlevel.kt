/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.generated.Public
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.DefaultDataType
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType
import org.jooq.postgres.extensions.bindings.LtreeBinding
import org.jooq.postgres.extensions.types.Ltree


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class Nlevel : AbstractRoutine<Int>("nlevel", Public.PUBLIC, DSL.comment(""), SQLDataType.INTEGER) {
    companion object {

        /**
         * The parameter <code>public.nlevel.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<Int?> = Internal.createParameter("RETURN_VALUE", SQLDataType.INTEGER, false, false)

        /**
         * The parameter <code>public.nlevel._1</code>.
         */
        val _1: Parameter<Ltree?> = Internal.createParameter(
            "_1",
            DefaultDataType.getDefaultDataType("\"public\".\"ltree\""),
            false,
            true,
            LtreeBinding()
        )
    }

    init {
        returnParameter = Nlevel.RETURN_VALUE
        addInParameter(Nlevel._1)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: Ltree?): Unit = setValue(Nlevel._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<Ltree?>): Unit {
        setField(Nlevel._1, field)
    }
}
