/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records


import java.time.LocalDateTime
import java.util.UUID

import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.generated.tables.AssetVariant
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class AssetVariantRecord() : UpdatableRecordImpl<AssetVariantRecord>(AssetVariant.ASSET_VARIANT) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var assetId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var objectStoreBucket: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var objectStoreKey: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var attributes: JSONB?
        set(value): Unit = set(4, value)
        get(): JSONB? = get(4) as JSONB?

    open var originalVariant: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised AssetVariantRecord
     */
    constructor(
        id: UUID? = null,
        assetId: UUID? = null,
        objectStoreBucket: String? = null,
        objectStoreKey: String? = null,
        attributes: JSONB? = null,
        originalVariant: Boolean? = null,
        createdAt: LocalDateTime? = null
    ) : this() {
        this.id = id
        this.assetId = assetId
        this.objectStoreBucket = objectStoreBucket
        this.objectStoreKey = objectStoreKey
        this.attributes = attributes
        this.originalVariant = originalVariant
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }
}
