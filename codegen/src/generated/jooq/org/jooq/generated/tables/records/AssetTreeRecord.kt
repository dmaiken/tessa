/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records


import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Record1
import org.jooq.generated.tables.AssetTree
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.postgres.extensions.types.Ltree


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class AssetTreeRecord() : UpdatableRecordImpl<AssetTreeRecord>(AssetTree.ASSET_TREE) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var entryId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var path: Ltree?
        set(value): Unit = set(2, value)
        get(): Ltree? = get(2) as Ltree?

    open var alt: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised AssetTreeRecord
     */
    constructor(
        id: UUID? = null,
        entryId: Long? = null,
        path: Ltree? = null,
        alt: String? = null,
        createdAt: LocalDateTime? = null
    ) : this() {
        this.id = id
        this.entryId = entryId
        this.path = path
        this.alt = alt
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }
}
